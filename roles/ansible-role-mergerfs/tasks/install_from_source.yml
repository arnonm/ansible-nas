---
# Note: we don't use the GitHub API to retrieve the latest version because
# it has rate limits which are hard to avoid in CI (we need a token, authenticate
# with the API, etc.). Instead, we browse the latest release url which redirects
# to the release page, where we can find the version number in the URL.
- name: Install Mergerfs
  block:
    - become: false
      delegate_to: localhost
      run_once: true
      block:
        - name: Get latest release information from GitHub
          uri:
            url: "{{ mergerfs_github_releases_url }}/latest"
          register: mergerfs_github_release_page

        - name: Set latest mergerfs version fact
          set_fact:
            mergerfs_version: "{{ mergerfs_github_release_page['url'].split('/')[-1] }}"
      when: mergerfs_version == "latest"

    - set_fact:
        install_dir: "mergerfs-{{mergerfs_version}}"

    - set_fact:
        full_path: "{{top_install_path}}/{{install_dir}}"

    - name: "Create required directories in /usr/local/src"
      file:
        path: "/usr/local/src/{{ item }}"
        state: directory
        owner: root
        group: root
      with_items:
        - "mergerfs"
        - "mergerfs/{{ install_dir }}"

    - name: Determine package download url
      become: false
      delegate_to: localhost
      run_once: true
      # https://github.com/trapexit/mergerfs/releases/download/2.35.0/mergerfs-2.35.0.tar.gz

      set_fact:
        mergerfs_package_url: "{{ mergerfs_github_url }}/releases/download/{{ mergerfs_version }}/mergerfs-{{mergerfs_version}}.tar.gz"

    # - name: "Git checkout"
    #   become: true
    #   git:
    #     repo: "{{mergerfs_github_url}}.git"
    #     dest: "{{full_path}}"
    #     version: "{{mergerfs_version}}"
    #   register: gitchange
    - name: Copy source files
      ansible.builtin.unarchive:
        src: "{{ mergerfs_package_url }}"
        dest: "{{ top_install_path }}"
        remote_src: yes
      register: source_files

    - name: install dependencies
      become: true
      ansible.builtin.command:
        chdir: "{{full_path}}"
        cmd: "tools/install-build-pkgs"

    - name: Work around for merferfs issue of debian-buster
      become: true
      ansible.builtin.shell:
        chdir: "{{full_path}}"
        cmd: "sed -i 's/debian/{{ ansible_distribution|lower }}/g' {{full_path}}/ChangeLog"

    - name: Work around part 2
      become: true
      ansible.builtin.command: 
        chdir: "{{full_path}}"
        cmd: "sed -i 's/buster/{{ ansible_distribution_release }}/g' {{full_path}}/ChangeLog"

    - name: build
      become: true
      ansible.builtin.command:
        chdir: "{{full_path}}"
        cmd: "make deb"
      when: source_files.changed


    - name: Unmount mergerfs to update version if source files source_files changed 
      ansible.posix.mount:
        path: "{{mergerfs_mounts[0]['path'] | mandatory}}"
        state: unmounted
      # when: source_files.changed

    - name: Install mergerfs package with apt
      become: true
      apt:
        deb: "{{top_install_path}}/{{mergerfs_pkg_prefix}}{{ mergerfs_version }}{{mergerfs_pkg_suffix_from_src}}"
        state: present
        update_cache: true
  when: not ansible_check_mode
