#! /bin/sh
#
# This script should be called by upssched via the CMDSCRIPT directive.
# 
# Here is a quick example to show how to handle a bunch of possible
# timer names with the help of the case structure.
#
# This script may be replaced with another program without harm.
#
# The first argument passed to your CMDSCRIPT is the name of the timer
# from your AT lines.

# Dynamic name assignment
UPS=$( upsc -l 2>/dev/null )

# Or manual name assignement
# UPS="YOUR-UPS-DEFINED-NAME-IN-UPS.CONF"

STATUS=$( upsc $UPS ups.status )
CHARGE=$( upsc $UPS battery.charge )
CHMSG="[$STATUS]:$CHARGE%"

case $1 in
	online) MSG="$UPS, $CHMSG - power supply has been restored." ;;
	onbatt) MSG="$UPS, $CHMSG - power failure - save your work!" ;;
	lowbatt) MSG="$UPS, $CHMSG - shutdown now!" ;;
	upsgone) MSG="The UPS $UPS has been gone for awhile" ;;
	*) MSG="$UPS, $CHMSG - Unrecognized command: $1" ;;
esac
logger -i -t upssched-cmd $MSG

# Comment out the line below for workstations
# notify-send-all "$MSG"