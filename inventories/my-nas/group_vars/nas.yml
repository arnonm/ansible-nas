---
##                       ._____.   .__
##  _____    ____   _____|__\_ |__ |  |   ____             ____ _____    ______
##  \__  \  /    \ /  ___/  || __ \|  | _/ __ \   ______  /    \\__  \  /  ___/
##   / __ \|   |  \\___ \|  || \_\ \  |_\  ___/  /_____/ |   |  \/ __ \_\___ \
##  (____  /___|  /____  >__||___  /____/\___  >         |___|  (____  /____  >
##       \/     \/     \/        \/          \/               \/     \/     \/
##     a n s i b l e - n a s      https://github.com/davestephens/ansible-nas

# Add your all.yml config overrides to this file. See group_vars/all.yml for all possible settings.

# Ansible options
ansible_nas_hostname: dsmhome
ansible_nas_timezone: "Asia/Jerusalem"

primary_user: "hda_admin"
ssh_pub_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5MmEhwd7q59uGEyeX2VajxXdU/MXPmYD5on7Gfn+WIFREnYbnstQKxrpyk78UikW1V9diNU0qBIGbnpXyzlCGMz3tMH4+SNxSbBmKCVR4itMscyoMBIhOUjyl/OF7idYrNQa95BV/MArh/n6XN1wpJywqTTR++Clhex4o32DeqTUDpNQhTkpmjJTFLi7JK13NcSCUO2ceFNsP6FiKlgrlliTErEf6qdCi/HqBmQgXBn75YvVG7771bElzGlI/XkyCmSOo/bDU+4y6M9D5HecK64YNHG1g8ipZaPekbUZqUo5LjNlhPIsIZqTHz8J0Ld0vE2MO4ByH5TSkUreRgS0T creating SSH"

samba_enabled: true
samba_shares_root: /mnt/storage/samba # We don't want it in Mount - we want it in the pools
samba_server_string: "DSM NAS"
samba_force_group: "samba-users"
samba_users:
  - name: arnon
    password: "{{ default_user_password}}"
  - name: ava
    password: "{{ default_user_password}}"
  - name: yael
    password: "{{ default_user_password}}"
  - name: racheli
    password: "{{ default_user_password}}"
  - name: yonatan
    password: "{{ default_user_password}}"
  - name: nextcloud
    password: "{{ default_user_password }}"

# Shares you want published over Samba.
samba_shares:
  - name: downloads
    comment: "Stuff downloaded"
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ downloads_root }}"
    group: "{{samba_force_group}}"

  - name: movies
    comment: "Movies"
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ movies_root }}"
    group: "{{samba_force_group}}"

  - name: tv
    comment: "TV Episodes"
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ tv_root }}"
    group: "{{samba_force_group}}"

  - name: music
    comment: "Music"
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ music_root }}"
    group: "{{samba_force_group}}"

  - name: dump
    comment: "File dump"
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ samba_shares_root }}/dump"
    group: "{{samba_force_group}}"

  - name: photos
    comment: "Pictures"
    guest_ok: yes
    public: yes
    writable: yes
    browseable: yes
    path: "{{ photos_root }}"
    group: "{{samba_force_group}}"

  - name: documents
    comment: "Documents"
    guest_ok: no
    public: yes
    writable: yes
    browseable: yes
    path: "{{ documents_root }}"
    group: "{{samba_force_group}}"
    valid_users: "@{{samba_force_group}}"

  # - name: code
  #   comment: "Code"
  #   guest_ok: yes
  #   public: yes
  #   writable: yes
  #   browseable: yes
  #   path: "{{ code_root }}"

nfs_shares_root:
nfs_exports:
torrents_root: "{{ samba_shares_root }}/dump/torrents"
###
### Brazarr
###
bazarr_enabled: true
bazarr_data_directory: "{{ compose_home }}/bazarr/data"
bazarr_compose_directory: "{{ compose_home }}/bazarr"

###
### Cockpit
###
cockpit_enabled: true
cockpit_started: true
cockpit_port: 9090
cockpit_packages: full
cockpit_identities_enabled: true

###
###
###
filebrowser_enabled: true
filebrowser_group_id: 1319
filebrowser_user_id: 1319

### Nut
###
###
nut_enabled: true
nut_managed_config: true
nut_host: localhost
nut_user: monitor
nut_password: "monitor"
nut_ups:
  - name: AVIEM
    driver: "usbhid-ups"
    port: "auto"
    description: "Aviem Pro"
    
    extra: |
      #maxretry = 10
      #retrydelay = 1
      vendorid = "06DA"
      productid = "FFFF"
      bus = "001"

###
### Stirling
###
stirling_enabled: true
stirling_available_externally: false

stirling_compose_directory: "{{compose_home}}/stirlingpdf "
stirling_data_directory:  "{{stirling_compose_directory}}/data"
stirling_container_name: "stirling-pdf"

# uid / gid
stirling_user_id: "1319"
stirling_group_id: "1319"

# network
stirling_port: "8084"
stirling_memory: 1g


### 
### Netdata
###
netdata_enabled: false
netdata_available_externally: false
# network
netdata_hostname: "{{ansible_nas_hostname}}"
netdata_port: "19999"
# specs
netdata_memory: 1g
netdata_user_id: "1316"
netdata_group_id: "1316"
netdata_config_directory: "{{ compose_home }}/netdata/config"
netdata_compose_directory: "{{ compose_home }}/netdata"

###
### NextCloud
###
nextcloud_enabled: true
nextcloud_compose_directory: "{{ compose_home }}/nextcloud"
nextcloud_port: "8083"
nextcloud_hostname: "nextcloud"
nextcloud_user_id: "1318"
nextcloud_group_id: "1318"
nextcloud_sql_database: "nextcloud"
nextcloud_app_image: "nextcloud:apache-smb"
nextcloud_admin_user: "admin" 
nextcloud_trusted_domains: "{{ansible_nas_hostname}}:{{nextcloud_port}} {{ansible_nas_fqdn}}/{{nextcloud_hostname}}"

###
### Mergefs
###
mergerfs_enabled: true
mergerfs_tools_enable: true
# mergerfs_install_mode: package_manager
mergerfs_install_mode: "source"
mergerfs_minfreespace: "2G"
mergerfs_fsname: "mergefs"
mergerfs_mounts:
  - path: /mnt/storage
    branches:
      - /mnt/disk*
    options: defaults,allow_other,use_ino,cache.files=partial,dropcacheonclose=true,category.create=mfs,minfreespace={{mergerfs_minfreespace}},fsname={{mergerfs_fsname}}

###
### Docker
###
docker_users:
  - arnon

# Area for all the configuration files of the applicaiton in containers
docker_home: /var/lib/docker
# docker_home: /mnt/storage/docker
# Area of all the containers themselves
docker_image_directory: "{{ docker_home }}/data"
compose_home: /opt/local

###
### Traefik
###
traefik_enabled: false
traefik_data_directory: "{{ compose_home }}/traefik/data"
certEmail: "{{ ansible_nas_email }}"

portainer_enabled: true
portainer_data_directory: "{{ compose_home }}/portainer/data"

photoprism_enabled: true
photoprism_available_externally: true
photoprism_compose_directory: "{{ compose_home }}/prism"
photoprism_storage: "{{ compose_home }}/prism/storage"
photoprism_database_dir: "{{ compose_home }}/prism/db"
photoprism_photos_directory: "{{ photos_root }}"
photoprism_config_directory: "{{ compose_home }}/prism/config"
photoprism_import: "{{ compose_home }}/prism/import"
photoprism_letsencrypt: "{{ compose_home }}/prism/letsencrypt"
photoprism_hostname: "https://{{ansible_nas_fqdn}}"
photoprism_user_id: "1308"
photoprism_group_id: "1007"
photoprism_path: "/photoprism"


heimdall_enabled: true
heimdall_port_http: 8081
heimdall_data_directory: "{{ compose_home }}/heimdall" # Needs to be changed
heimdall_user_id: "1310"
heimdall_group_id: "1310"

homer_enabled: false
homer_port: "8082"
homer_compose_directory: "{{ compose_home }}/homer"


deluge_enabled: true
deluge_config_directory: "{{ compose_home }}/deluge/config"
deluge_download_directory: "{{ downloads_root }}"
deluge_watch_directory: "{{ torrents_root }}"
deluge_user_id: "1312"
deluge_group_id: "1007"

radarr_enabled: true
radarr_download_directory: "{{ downloads_root }}"
radarr_data_directory: "{{ compose_home }}/radarr/data"
radarr_user_id: "1313"
radarr_group_id: "1007"


jackett_enabled: true
jackett_data_directory: "{{ compose_home }}/jackett/data"
jackett_torrents_root: "{{ torrents_root }}"

sonarr_enabled: true
sonarr_data_directory: "{{ compose_home }}/sonarr/data"
sonarr_download_directory: "{{ downloads_root }}"
sonarr_user_id: "1314"
sonarr_group_id: "1007"

plex_enabled: true
plex_config_directory: "{{ compose_home }}/plex/config"
plex_tmp_directory: "{{ compose_home }}/tmp"
plex_logs: "{{ compose_home }}/plex/logs"
plex_data_directory: "{{ compose_home }}/plex/data"
plex_movies_directory: "{{ movies_root }}"
plex_tv_directory: "{{ tv_root }}"
plex_photos_directory: "{{ photos_root }}"
plex_podcasts_directory: "{{ podcasts_root }}"
plex_music_directory: "{{ music_root }}"
plex_audiobooks_directory: "{{ audiobooks_root }}"
plex_compose_directory: "{{ compose_home }}/plex"
plex_user_id: "1309"
plex_group_id: "1007"
plex_devices:
 - "/dev/dri:/dev/dri"

route53_ddns_enabled: false
route53_host: "{{ansible_nas_hostname}}.{{ ansible_nas_domain }}"
route53_data_directory: "{{ compose_home }}/route53_ddns"

snapraid_enabled: true
snapraid_install: true
snapraid_runner: true
snapraid_check: true
snapraid_config_hidden_files_enabled: true
snapraid_config_hidden_files: nohidden
snapraid_config_excludes:
  - "exclude /lost+found/"

snapraid_content_files:
  - /var/snapraid.content
snapraid_data_disks:
  - path: /mnt/disk1
    content: true
  - path: /mnt/disk2
    content: true
  # - path: /mnt/disk3
  # - path: /mnt/disk4
snapraid_parity_disks:
  - path: /mnt/parity1
    content: true

## Keys for ansible-disk
disk_enabled: true
additional_fs_utils:
  - xfsprogs # package for mkfs.xfs on RedHat / Ubuntu
  - btrfs-progs # package for mkfs.btrfs on CentOS / Debian

disk_additional_disks:
  - disk: /dev/sdb
    fstype: ext4
    mount_options: defaults
    mount: /opt/local
    user: root
    group: root
    mode: "0755"
  - disk: /dev/sdc
    fstype: ext4
    mount_options: defaults,nobootwait,errors=remount-ro
    mount: /mnt/parity1
    user: root
    group: root
    mode: "0755"
    #  disable_periodic_fsck: false
  - disk: /dev/sdd
    fstype: ext4
    mount_options: defaults,nobootwait,errors=remount-ro
    mount: /mnt/disk1
    user: root
    group: root
    mode: "0755"
  - disk: /dev/sde
    fstype: ext4
    mount_options: defaults,nobootwait,errors=remount-ro
    mount: /mnt/disk2
    user: root
    group: root
    mode: "0755"
  - disk: /dev/sdf
    fstype: ext4
    mount_options: defaults,nobootwait,errors=remount-ro
    mount: /mnt/disk3
    user: root
    group: root
    mode: "0755"
disk_enable_partioning: false

ansible_ddns_enabled: true
ddns_client: "duc"
ddns_packages: []
ddclient_user: root
ddns_config_files: []
ddns_service: ""
ddns_boot_at_start: false

# Gmail Credentials
google_domain_protocol: "googledomains"
google_domain_login: "testuser"
google_domain_password: "testpassword"
google_domain_ddns: "ddns-domain.test"

timemachine_enabled: true
timemachine_data_directory: "{{samba_shares_root}}/timemachine"
timemachine_group_id: "1312"
timemachine_user_id: "1312"

webmin_enabled: false
webmin_base_dir: "/usr/share/webmin"

letsencrypt_enabled: true
letsencrypt_dir: "/etc/letsencrypt/keys"

cloudberry_enabled: true

paperless_ng_enabled: true
paperless_ng_config_directory: "{{ compose_home }}/paperless_ng"
paperless_ng_files_directory: "{{ documents_root }}/paperless"

paperless_ng_postgres_directory: "{{ paperless_ng_config_directory }}/postgres"
paperless_ng_data_directory: "{{ paperless_ng_config_directory }}/data"
paperless_ng_export_directory: "{{ paperless_ng_config_directory }}/export"
paperless_ng_media_directory: "{{ paperless_ng_files_directory }}/media"
paperless_ng_consume_directory: "{{ paperless_ng_files_directory }}/consume"
paperless_ng_port: "16922"
paperless_ng_hostname: "{{ansible_nas_fqdn}}"
paperless_ng_user_id: 1315
paperless_ng_group_id: 1315

